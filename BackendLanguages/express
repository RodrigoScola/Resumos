what is express
     most popular node web framework and is the underlying library 
          write handlers for requests with different http verbs at different url paths ( routes );
          integrate with view rendering engines in order to generate responses by inserting data into templates
          set common web application settings like the port to use for connectiong and the location of templates that are used for rendering the response
          add additional request for processing middleware at any point within the request handling pipeline

importing and creating modules
     importing express and creating an instance 
          const express = require('express')
          const app = express();

     to export a module you need to expose them as additional props on the exports object
          module.exports = {
               area: function(width) {
                    return width * width
               },
               perimeter: function (width) {
                    return width * 4
               };
          }
creating route handlers
     in the base express example, we defined a route handler function for http requests to the root ('/');
     app.get('/', (req, res) => {
          res.send('helo world');
     });
          that only sends a response to return the string Hello world, if you want to send a json file you can use res.json, or if you want to send a file, res.sendFile()
     the express application also provides methods to define route handlers for all the http verbs 
          checkout()
          copy()
          delete()
          get()
          head()
          lock()
          merge()...
     theres a special routing method, .all() which will be called in response to any http method. this is used for loading middleware functions at a particular path for all request methods
     the following example shows a handler that will be executed for requests to /secret 
          app.all('/secret', ( req,res, next) => {
               console.log('Accessing the secret section')
               next()
          });
     routes allow you to match particular patterns of characters in a url and extract some values from the url and pass them as parameters to the route handler

routing with express 
     const express = require('express'),
           server = express();

     server.set('port',process.env.port || 3000);

     server.get('/',(req,res) => {
          res.send('homepage')
     })
     server.get('/about',(req,res)=> {
          res.send('aboutPage');
     })
     error handling
     server.use((req,res) => {
          res.type('text/plain');
          res.status(505);
          res.send('errorPage')
     })
     binding to a port
     server.listen(3000, () => {
          console.log(`express server started at port 3000`)
     })

to use the router in the main app we would require the module then call use on the express application to add the router to the middleware handling path
     const wiki = require('./wiki.js');
     // ...
     app.use('/wiki',wiki);

using middleware    
     they are used for tasks from serving static files to error handling, to compressing http responses.