heading elements accomplish several things
     create structure, dividing the page in groups of increasingly soecific content
     create visual contrast, with lower-numbered headers like h1 displaying in a larger and more striking format 
     provide navigation and contextual information to web browsers, plugins, assistive technologies like screen readers

     having a keyword in a h1 will impact search results more than having the same keyyword in a p tag, because its assumed that words used in the main heading are bery important to the topic of your entire website
     generally you dont skip header numbers, you go h1,h2,h3,h4,h5,h6

real text vs text within images
     using real text instead of text within images provides a website with several key benefits
          sceen readers can transform the text into a voice-over
          users can scale or magnify the text for better legibility without losing image quality
          its less taxing on the browser to load real text versus requesting a large image assets from a server

semantic html elements https://developer.mozilla.org/en-US/docs/Web/HTML/Element

head / metadata tags
     head <- machine-readable information (metadata) about the document, like metatags, title, style sheets, scripts...
     link <- specifies relashionships between the current document and an external resource, this element is most commonly used to link css, but can be site icons 
          <link rel='stylesheet' href='./styles.css'> <- for stylesheets
          <link rel='icon' href='iconname.ico' type='image/png'> <- for icons
     meta <- metadata that cannot be represented by other html meta-related elements like base,link,script,style,title

content sectioning 
     adress <- indicates that the enclosed html provides contact information for a person or people or an organization
          <address>
               <a href="mailto:email@email.com">email@email.com</a>
               <a href="tel:+ph0nenumber">phonenumber</a>
          </address>
     article <- self contained composition ina a document page, app, or site, is intended to be reusable (forum post, magazine, newspaper article);
     aside <- portion of a document that is indirectly related to the content (sidebars or call out boxes);
     footer <- information about the author/company, usually not that important content
     header <- the title of the website
     main <- the main content of the website
     nav <- a section representing a navigational part, having links to other sites/parts of the site
     section <- generic standalone section of a document,doesnt have a more specific semantic element to represent it
     blockquote <- the enclosed text is a quotation, also has a box that is around its element
          cite <- url that designates the source document or message for the info quoted, intended to point to information explaining the contex or reference for the quote
     dl <- description list, the element encloses a list of groups of terms and descriptions 
          dt <- is the thing that needs the description
          dd <- is the description itself
     div <- generic container for flow content, has no effect on the content or layout until styled in some way using css
     figure <- self contained content, has an img and a figcaption (figcaption optional if you want to explain what is happening)
     ul <- unordered list of items
     ol <- ordered list of items
          li <- the item on an ul or ol 
     p <- represents an paragraph
     pre <- preformatted text which has to be represented exactly as written

inline text semantics 
     a <- link
     abbr <- abreviation or acronym (hovering the mouse on it shows the complete thing)
          <abbr title='Cascading Style Sheets'>CSS</abbr>
     b <- bold text 
     br <- line break
     cite <- the author of something, used as the author in a <blockquote>
     code <- text styled as code
     data <- 