what is a security policy
    servers are used to host web pages, applications, images, fonts and much more, when you use a browser you are likely attempting to access a distinct website
    websites often request these hosted resources from different locations on the internet. security policies on servers mitigate the risks associated with requesting assets hosted on different servers
    same origin policy is very restrictive , can only interact on servers that are on the same server
    an origin is made up of the following three parts
        protocol
        host
        port number
how does cors manage requests from external sources?

an http header is a piece of information associated with a request or a response. headers are passes back and forth between your web browser (client) and a server when the web page you are on wnats to use resources hosted on a different server. headers are used to describe requests and responses
the cors standard manages cross-origin requests by adding new http headers to the standard list of headers. the following are the new http headers added by the cors standard
    Access-Control-Allow-Origin
    Access-Control-Allow-Credentials
    Access-Control-Allow-Headers
    Access-Control-Allow-Methods
    Access-Control-Expose-Headers
    Access-Control-Max-Age
    Access-Control-Request-Headers
    Access-Control-Request-Methods
    Origin

    Access-Control-Allow-Origin
        Access-Control-Allow-Origin header allows servers to specify how their resources are shared with external domains. when a get request is made to access a resource on Server A, it will respond with a value for the Access-Control-Allow-Origin header
        if the value = *, the server will share the requested resources with any domain

pre flight requests
    most severs will allow get requests but may block others to modify resources on the server.
    when a request is made using any of the following http requst methods, a standard preflight request will be made before the original request
        put,delete,connect,options,trace,patch
    they use the options header, preflight requests are sent before the original request, determining whether or not the original request is safe
           
allowing multiple origins express
    {
        const whitelist = ['site1','site2']
        const corsOptions = {
            origin: function (origin, callback) {
                if (whitelist.indexOf(origin) !== -1) {
                    callback(null,true)
                } else {
                    callback(new Error('not allowed'))
                }
            }

        }
    }